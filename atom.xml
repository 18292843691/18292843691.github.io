<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>dayDream&#39;s blog</title>
  <subtitle>hello dayDream</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http:%5C%5Chexin.life/"/>
  <updated>2017-04-11T11:11:30.022Z</updated>
  <id>http:\\hexin.life/</id>
  
  <author>
    <name>dayDream</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http:%5C%5Chexin.life/2017/04/11/title-4/"/>
    <id>http:\\hexin.life/2017/04/11/title-4/</id>
    <published>2017-04-11T06:23:28.220Z</published>
    <updated>2017-04-11T11:11:30.022Z</updated>
    
    <content type="html"><![CDATA[<hr>
<p>title: 每个人都需要的中文排版指南</p>
<p>date: 2017-04-11 14:23:26</p>
<p>tags:<br>“转载”<br>categories:”其他”—</p>
<p>前几天被朋友吐槽排版太烂了，今天偶然看到这篇文章，然后就转载了过来，由于转载原因可能文章没有原文格式美观，有兴趣请点击链接查看原文。</p>
<ul>
<li>原文转载自<a href="http://stormzhang.com/2017/03/16/chinese-copywriting/" target="_blank" rel="external">stormzhang</a></li>
</ul>
<hr>
<h1 id="每个人都需要的中文排版指南"><a href="#每个人都需要的中文排版指南" class="headerlink" title="每个人都需要的中文排版指南"></a>每个人都需要的中文排版指南</h1><blockquote>
<p>之前有不少人在我公众号留言，说看我的排版很舒服，求指导。</p>
<p>我不是一个专业的写字人，我是程序员出身，在写代码的时候有点小洁癖，尽量会把每个细节做到更好，所以我在公众号写作的时候一样会注重每个细节，我认为排版是对写作最基本的要求，所以当我决定要在公众号写作的时候，就非常在意排版，并且一直在改进，</p>
<p>可惜的是，我看到无数不管是写博客还是写公众号的作者，从不会注意自己的排版，有时候看到一篇好的文章，如果排版很烂，会觉得很可惜。</p>
<p>公众号「小道消息」的作者 Fenng<br>曾不止一次强调排版的重要性，对此我也非常认同，任何说不拘小节，注重内容就行了的反驳都是借口，我自己在我的小密圈中也一直强调排版的重要性，很多圈友发布的动态无一排版都太烂，为此，我在小密圈中写下了这么一篇排版指南，真心希望所有的写字人都能注意下自己的排版。</p>
<p>这篇文章适用于所有编辑、作家、撰稿人、公众号作者、博主等，甚至适合所有人，因为人的一生难免避免不了写作。</p>
</blockquote>
<h1 id="1-空格"><a href="#1-空格" class="headerlink" title="1. 空格"></a>1. 空格</h1><blockquote>
<p>我每次看到网页上的中文字和英文、数字、符号挤在一起，就会坐立不安，忍不住想在他们之间加个空格。</p>
<p>「有研究显示，打字的时候不喜欢在中文和英文之间加空格的人，感情路都走得很辛苦，有七成的比例会在 34<br>岁的时候跟自己不爱的人结婚，而其余三成的人最后只能把遗产留给自己的猫。毕竟爱情跟书写都需要适时地留白。」</p>
</blockquote>
<ul>
<li>中英文之间需要加空格</li>
</ul>
<blockquote>
<p>eg. 大家可以搜索公众号 AndroidDeveloper 或者 googdev 关注我。</p>
</blockquote>
<ul>
<li>中文与数字之间需要加空格</li>
</ul>
<blockquote>
<p>eg. 不知不觉，我都快 30 岁了。</p>
</blockquote>
<ul>
<li>数字与单位之间需要加空格</li>
</ul>
<blockquote>
<p>eg. 我有一块 20 TB 的硬盘，鬼知道我是怎么用完的。</p>
</blockquote>
<ul>
<li>完整的英文整句时标点与单词之间需要加空格</li>
</ul>
<blockquote>
<p>eg. Stay hungry, stay foolish.</p>
<p>但是也有一些例外。</p>
</blockquote>
<ul>
<li>度的标志、百分号不加空格</li>
</ul>
<blockquote>
<p>eg. 今天气温有 30° 的高温。 eg. 据统计，关注公众号 AndroidDeveloper 的读者中有 80% 是长得好看的。</p>
</blockquote>
<ul>
<li>全角标点与其他字符之间不加空格</li>
</ul>
<blockquote>
<p>eg. 大家好，我是 stormzhang，请多多关照。</p>
</blockquote>
<h1 id="2-标点"><a href="#2-标点" class="headerlink" title="2. 标点"></a>2. 标点</h1><blockquote>
<p>说到标点，不得不说下全角和半角，很多人可能不了解全角和半角的概念，这里顺便介绍下。</p>
<p>全角和半角是英文和中文的编码规范不同遗留下的问题，简单来说，全角占两个字节，半角占一个字节，你可以理解成中文汉字是全角，英文字母是半角，不过半角全角主要是针对标点符号来说的，中文标点占两个字节，英文标点占一个字节。体现在排版上的差异就是，全角字符屏幕打印宽度是两个，而半角字符屏幕打印宽度是一个，如中文逗号和英文逗号他们的显示分别是「，」和「,」。</p>
</blockquote>
<ul>
<li>使用全角中文标点，中文排版中所有的标点都应该使用中文全角中文标点</li>
</ul>
<blockquote>
<p>eg. 大家好，我是 stormzhang。</p>
</blockquote>
<ul>
<li>遇到英文整句、特殊名词时使用半角标点。</li>
</ul>
<blockquote>
<p>eg. 乔布斯说过：「Stay hungry, stay foolish.」 eg. Facebook, Inc.</p>
</blockquote>
<ul>
<li>使用直角引号「我国国家标准要求弯引号，但是个人建议在新媒体排版时使用直角引号」。</li>
</ul>
<blockquote>
<p>eg. 你竟然不知道「帅比张」？</p>
</blockquote>
<ul>
<li>如果引号再使用引号使用直角双引号。</li>
</ul>
<blockquote>
<p>eg. 我质问他，「你难道忘记『帅比张』了么？」</p>
</blockquote>
<h1 id="3-其他"><a href="#3-其他" class="headerlink" title="3. 其他"></a>3. 其他</h1><blockquote>
<p>除以上之外，还有一些其他标准推荐大家使用的。</p>
</blockquote>
<ul>
<li>英文名词首字母尽量大写</li>
</ul>
<blockquote>
<p>eg. Google、Android、Facebook</p>
</blockquote>
<ul>
<li>专有名词使用正确的大小写</li>
</ul>
<blockquote>
<p>  eg. GitHub、iOS、iPhone 6s、MacBook Pro</p>
</blockquote>
<ul>
<li>首行不要缩进</li>
</ul>
<blockquote>
<p>这点可能有人不同意，但是我要在这里解释下，在说明之前我们必须弄明白「首行缩进」的目的是什么。</p>
<p>「每段之前空两格」是我们从小学写作文就养成的习惯，也是正式文体的格式要求，其目的是为了区分自然段。</p>
<p>但是像我们现在接触的阅读，都是没有固定的格式要求的，如微信公众号、电子文档等，所以大家一般都采用「空出一行」进行自然段与自然段之间的区分，这种写作方式非常省事，而且很整齐。</p>
<p>所以，我认为这种应该是最科学的方式，只要没有明确的格式要求，写作的排版无须首行缩进。</p>
<p>最后，你可能会问，以上这些原则是业界标准么？我不敢保证，但是你不妨看下 「Apple 中国官网」、「Microsoft<br>中国官网」、公众号「小道消息」、「MacTalk」等的排版，基本都是使用以上排版标准。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;title: 每个人都需要的中文排版指南&lt;/p&gt;
&lt;p&gt;date: 2017-04-11 14:23:26&lt;/p&gt;
&lt;p&gt;tags:&lt;br&gt;“转载”&lt;br&gt;categories:”其他”—&lt;/p&gt;
&lt;p&gt;前几天被朋友吐槽排版太烂了，今天偶然看到这篇文章，然后就转载
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>瀑布流</title>
    <link href="http:%5C%5Chexin.life/2017/04/09/title-3/"/>
    <id>http:\\hexin.life/2017/04/09/title-3/</id>
    <published>2017-04-09T15:09:45.000Z</published>
    <updated>2017-04-09T16:36:43.826Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">白日做的梦要靠自己追</blockquote>





<blockquote>
<p>好久没有写博客了，学习途中经常遇到好多小问题，感觉还是动手太少了，不过感觉好多视频中老师的代码是错误的，也不知道他们是怎么运行成功的，调试+百度了好久才修正过来，不过感觉不错，<em>可能是故意的吧，为了让我们自己动手查询</em>，今天实现了一下瀑布流的布局就发在这里吧，具体的注释我都放在代码里了。</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">    &lt;html&gt;</div><div class="line">    &lt;head&gt;</div><div class="line">    &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /&gt;</div><div class="line">    </div><div class="line">    &lt;title&gt;瀑布流&lt;/title&gt;</div><div class="line">    &lt;style type="text/css"&gt;</div><div class="line">        </div><div class="line">        *&#123;padding: 0;margin:0;&#125;</div><div class="line">        #main&#123;</div><div class="line">            position: relative;</div><div class="line">        &#125;</div><div class="line">        .pin&#123;</div><div class="line">            padding: 15px 0 0 15px;</div><div class="line">            float:left;</div><div class="line">        &#125;</div><div class="line">        .box&#123;</div><div class="line">            padding: 10px;</div><div class="line">            border:1px solid #ccc;</div><div class="line">            box-shadow: 0 0 6px #ccc;</div><div class="line">            border-radius: 5px;</div><div class="line">        &#125;</div><div class="line">        .box img&#123;</div><div class="line">            width:162px;</div><div class="line">            height:auto;</div><div class="line">        &#125;</div><div class="line">    &lt;/style&gt;</div><div class="line">    &lt;/head&gt;</div><div class="line">    </div><div class="line">    &lt;body&gt;</div><div class="line">    &lt;div id="main"&gt;</div><div class="line">        &lt;div class="pin"&gt;</div><div class="line">            &lt;div class="box"&gt;</div><div class="line">                &lt;img src="./images/1.jpg"/&gt;</div><div class="line">            &lt;/div&gt;</div><div class="line">        &lt;/div&gt;</div><div class="line">        &lt;!-- ...这里由于结构都一样就直接省去了 --&gt;</div><div class="line">        &lt;div class="pin"&gt;</div><div class="line">            &lt;div class="box"&gt;</div><div class="line">                &lt;img src="./images/1.jpg"/&gt;</div><div class="line">            &lt;/div&gt;</div><div class="line">        &lt;/div&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">    &lt;script type="text/javascript"&gt;</div><div class="line">    </div><div class="line">    window.onload = function () &#123;</div><div class="line">        waterFall("main","pin");</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    //模拟从后台传来的json数据</div><div class="line">    var dataInt=&#123;'data':[&#123;'src':'1.jpg'&#125;,&#123;'src':'2.jpg'&#125;,&#123;'src':'3.jpg'&#125;,&#123;'src':'5.jpg'&#125;,&#123;'src':'5.jpg'&#125;,&#123;'src':'4.jpg'&#125;,&#123;'src':'6.jpg'&#125;,&#123;'src':'6.jpg'&#125;,&#123;'src':'16.jpg'&#125;,&#123;'src':'16.jpg'&#125;,&#123;'src':'16.jpg'&#125;,&#123;'src':'6.jpg'&#125;]&#125;;</div><div class="line">    </div><div class="line">    //瀑布流滚动加载</div><div class="line">    window.onscroll = function () &#123;</div><div class="line">        if(checkScroll())&#123;</div><div class="line">            var oParent = document.getElementById("main");</div><div class="line">            //	将后台传来的数据渲染进当前页面尾部</div><div class="line">            for( var i = 0; i &lt; dataInt.data.length; i++)&#123;</div><div class="line">                //创建最外层div</div><div class="line">                var oPin = document.createElement('div');</div><div class="line">                oPin.className = 'pin';</div><div class="line">                oParent.appendChild(oPin);</div><div class="line">                </div><div class="line">                //创建图片的盒子</div><div class="line">                var oBox = document.createElement('div');</div><div class="line">                oBox.className = 'box';</div><div class="line">                oPin.appendChild(oBox);</div><div class="line">                </div><div class="line">                //创建图片</div><div class="line">                var oImg = document.createElement('img');</div><div class="line">                oImg.src = "./images/" + dataInt.data[i].src;//获取传来的json中的图片</div><div class="line">                oBox.appendChild(oImg);</div><div class="line">            &#125;</div><div class="line">            waterFall("main","pin");  //将传入的图片进行瀑布流排序</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    //检测是否具备加载条件--&gt;当最后一个盒子出现在视线中时开始加载</div><div class="line">    function checkScroll () &#123;</div><div class="line">        //获取整个大盒子</div><div class="line">        var oParent = document.getElementById("main");</div><div class="line">        //获取所有图片</div><div class="line">        var oBoxs = getByClass(oParent,"pin");</div><div class="line">        // var oBoxs = oParent.getElementsByClassName("pin");</div><div class="line">        </div><div class="line">        //获取最后一个盒子的高度</div><div class="line">        var lastBoxH = oBoxs[oBoxs.length - 1].offsetTop ;</div><div class="line">        </div><div class="line">        //获取滚动距离</div><div class="line">        var scrollTop = document.body.scrollTop || document.documentElement.scrollTop;</div><div class="line">        </div><div class="line">        //获取浏览器窗口的高度</div><div class="line">        // var clienHeight = document.documentElement.clientHeight;</div><div class="line">        var clientHeight = document.body.clientHeight || document.documentElement.clientHeight </div><div class="line">        console.log(scrollTop);</div><div class="line">        console.log(clientHeight);</div><div class="line">        return (lastBoxH &lt; clientHeight + scrollTop) ? true : false;  //判断滚动的高度加浏览器的高度是否高于最后一个盒子的高度，即盒子是否出现在视线中</div><div class="line">    &#125;</div><div class="line">    </div><div class="line"></div><div class="line">    function waterFall( parent, pin ) &#123;</div><div class="line">        //获取整个大盒子</div><div class="line">        var oParent = document.getElementById(parent);</div><div class="line">        //获取所有图片</div><div class="line">        var oBoxs = getByClass(oParent,"pin");</div><div class="line">        // var oBoxs = oParent.getElementsByClassName("pin");</div><div class="line">        </div><div class="line">        // 获取每个盒子的宽度</div><div class="line">        var oBoxw = oBoxs[0].offsetWidth;</div><div class="line">        </div><div class="line">        //获取每一行一共有几个盒子，用Math.floor()向下取整</div><div class="line">        var cols = Math.floor(document.documentElement.clientWidth / oBoxw);</div><div class="line">        </div><div class="line">        //设置每个图片盒子的宽度都一致并居中显示</div><div class="line">        oParent.style.cssText = "width:" + oBoxw*cols + "px; margin:0 auto;";</div><div class="line">        </div><div class="line">        //存放每一列盒子高度的数组</div><div class="line">        var boxArr = [];</div><div class="line">        for(var i = 0; i &lt; oBoxs.length; i++)&#123;</div><div class="line">            </div><div class="line">            if( i &lt; cols)&#123;//遍历盒子，将盒子的高度放入数组</div><div class="line">                boxArr.push(oBoxs[i].offsetHeight);</div><div class="line">            &#125;else&#123;</div><div class="line"></div><div class="line">                //调整下一列盒子的位置</div><div class="line">                var minH = Math.min.apply(null,boxArr);   //找到数组中的最小值--&gt;这里用apply改变this的</div><div class="line">                var minIndex = getMinIndex(boxArr,minH); // 获取高度最低的索引值</div><div class="line">                </div><div class="line">                oBoxs[i].style.position = "absolute";</div><div class="line">                oBoxs[i].style.top = minH + "px";</div><div class="line">                oBoxs[i].style.left = minIndex*oBoxw + "px";    //盒子左边的距离等于最低盒子的索引值*每一个盒子的宽度</div><div class="line">                </div><div class="line">                /* oBoxs[i].style.left = oBoxs[minIndex].offsetWidth + "px"; //--&gt;盒子左边的距离等于最低高度盒子的左边距离 */</div><div class="line"></div><div class="line">                //此时剩余盒子会绝对定位到该位置，因此我们需要去修改数组中最低的高度</div><div class="line">                boxArr[minIndex] += oBoxs[i].offsetHeight;</div><div class="line">            &#125;		</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    // 获取索引值,遍历取到和最小值相等的值--&gt;数组太大可以用数据结构中的查找，二分查找听说是面试重点(简单实用吧)~</div><div class="line">    function getMinIndex ( boxArr, minH ) &#123;</div><div class="line">        for(var i = 0; i &lt; boxArr.length; i++)&#123;</div><div class="line">            if(boxArr[i] == minH)&#123;</div><div class="line">                return i;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    //获取className</div><div class="line">    function getByClass ( parent, cls ) &#123;</div><div class="line">        var oParent = document.getElementById("main");</div><div class="line">        var	oElements = oParent.getElementsByTagName("*");</div><div class="line">        var boxArr = new Array();</div><div class="line">            </div><div class="line">            for(var i = 0; i &lt; oElements.length; i++) &#123;</div><div class="line">                if(oElements[i].className == cls)&#123;</div><div class="line">                    boxArr.push(oElements[i]);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            return boxArr;</div><div class="line">    &#125;</div><div class="line">    &lt;/script&gt;</div><div class="line">    &lt;/body&gt;</div><div class="line">    &lt;/html&gt;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;白日做的梦要靠自己追&lt;/blockquote&gt;





&lt;blockquote&gt;
&lt;p&gt;好久没有写博客了，学习途中经常遇到好多小问题，感觉还是动手太少了，不过感觉好多视频中老师的代码是错误的，也不知道他
    
    </summary>
    
      <category term="前端" scheme="http:%5C%5Chexin.life/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="瀑布流" scheme="http:%5C%5Chexin.life/tags/%E7%80%91%E5%B8%83%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>CSS学习笔记(Placeholder及CSS_hack)</title>
    <link href="http:%5C%5Chexin.life/2017/03/31/title-2/"/>
    <id>http:\\hexin.life/2017/03/31/title-2/</id>
    <published>2017-03-31T15:09:45.000Z</published>
    <updated>2017-04-09T16:36:17.689Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">白日做的梦要靠自己追</blockquote>



<h1 id="IE8以下图片出现蓝色边框"><a href="#IE8以下图片出现蓝色边框" class="headerlink" title="IE8以下图片出现蓝色边框"></a>IE8以下图片出现蓝色边框</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">img&#123;</div><div class="line">        <span class="attr">border</span>:<span class="number">0</span>;  <span class="comment">/*或者border:none;*/</span></div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>#如何使文本以大写字母开头？</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">text-transform:capitalize;</div></pre></td></tr></table></figure>
<h1 id="强制设置为IE模式"><a href="#强制设置为IE模式" class="headerlink" title="强制设置为IE模式"></a>强制设置为IE模式</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span> /&gt;</div><div class="line">    <span class="comment">//我写的页面在IE8之下全部乱掉了，在网上搜到这个方法，用了发现好了，强制为IE渲染模式</span></div></pre></td></tr></table></figure>
<hr>
<h1 id="IE8及以下不支持Placeholder（基于JQ）"><a href="#IE8及以下不支持Placeholder（基于JQ）" class="headerlink" title="IE8及以下不支持Placeholder（基于JQ）"></a><a href="http://www.cnblogs.com/digdeep/p/4424487.html" target="_blank" rel="external">IE8及以下不支持Placeholder</a>（基于JQ）</h1><pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">&lt;!doctype html&gt;</div><div class="line">    &lt;html&gt;</div><div class="line">    &lt;header&gt;</div><div class="line">    &lt;meta charset="utf-8"&gt;</div><div class="line">    &lt;title&gt;&lt;/title&gt;</div><div class="line">    &lt;style type="text/css"&gt;</div><div class="line">         *&#123;margin:0;padding:0;&#125;</div><div class="line">        form &#123;margin:50px;&#125;</div><div class="line">        input &#123;display:block;margin:0 0 6px 0;&#125;</div><div class="line">    &lt;/style&gt;</div><div class="line">    &lt;/header&gt;</div><div class="line">    &lt;body&gt;</div><div class="line">        &lt;form&gt;</div><div class="line">            用户名：&lt;input name="name" placeholder="请输入用户名"/&gt;</div><div class="line">            密码：&lt;input name="password" placeholder="请输入登陆密码"/&gt;</div><div class="line">        &lt;/form&gt;</div><div class="line">            &lt;script type="text/javascript" src="jquery-1.11.1.min.js"&gt;&lt;/script&gt;</div><div class="line">            &lt;script type="text/javascript"&gt;</div><div class="line">            $(function()&#123;</div><div class="line">                function placeholderSupport() &#123;    // 判断浏览器是否支持 placeholder</div><div class="line">                    return 'placeholder' in document.createElement('input');</div><div class="line">                &#125;</div><div class="line">                </div><div class="line">                if(!placeholderSupport())&#123;</div><div class="line">                    $(document).on('focus', '[placeholder]',function() &#123;</div><div class="line">                        var input = $(this);</div><div class="line">                        if (input.val() == input.attr('placeholder')) &#123;</div><div class="line">                            input.val('');</div><div class="line">                            input.removeClass('placeholder');</div><div class="line">                        &#125;</div><div class="line">                    &#125;);</div><div class="line">                    $(document).on('blur', '[placeholder]',function() &#123;</div><div class="line">                        var input = $(this);</div><div class="line">                        if (input.val() == '' || input.val() == input.attr('placeholder')) &#123;</div><div class="line">                            input.addClass('placeholder');</div><div class="line">                            input.val(input.attr('placeholder'));</div><div class="line">                        &#125;</div><div class="line">                    &#125;);</div><div class="line">                    $('[placeholder]').blur();</div><div class="line">                &#125;;</div><div class="line">            &#125;);</div><div class="line">    &lt;/script&gt;</div><div class="line">    &lt;/body&gt;</div><div class="line">    &lt;/html&gt;</div></pre></td></tr></table></figure>
</code></pre><hr>
<h1 id="常见CSS-hack"><a href="#常见CSS-hack" class="headerlink" title="常见CSS hack"></a>常见<a href="http://baike.baidu.com/item/css%20hack" target="_blank" rel="external">CSS hack</a></h1><p><em>不管是什么方法，书写的顺序都是firefox的写在前面，IE7的写在中间，IE6的写在最后</em><br><strong>（1）方式一 条件注释法</strong></p>
<p> <em>只在IE下生效</em></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;!--[<span class="keyword">if</span> IE]&gt;</div><div class="line">    这段文字只在IE浏览器显示</div><div class="line">    &lt;![endif]--&gt;</div></pre></td></tr></table></figure>
<p><em>只在IE6下生效</em></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;!--[<span class="keyword">if</span> IE <span class="number">6</span>]&gt;</div><div class="line">    这段文字只在IE6浏览器显示</div><div class="line">    &lt;![endif]--&gt;</div></pre></td></tr></table></figure>
<p><em>只在IE6以上版本生效</em></p>
<figure class="highlight plain"><figcaption><span>gte IE 6]></span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">这段文字只在IE6以上(包括)版本IE浏览器显示</div><div class="line">&lt;![endif]--&gt;</div></pre></td></tr></table></figure>
<p><em>只在IE8上不生效</em></p>
<figure class="highlight plain"><figcaption><span>! IE 8]></span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">这段文字在非IE8浏览器显示</div><div class="line">&lt;![endif]--&gt;</div></pre></td></tr></table></figure>
<p><em>非IE浏览器生效</em></p>
<figure class="highlight plain"><figcaption><span>!IE]></span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">这段文字只在非IE浏览器显示</div><div class="line">&lt;![endif]--&gt;</div></pre></td></tr></table></figure>
<p><strong>（2）方式二 类内属性前缀法</strong></p>
<p>在标准模式中：</p>
<ul>
<li>“-″减号是IE6专有的hack</li>
<li>“\9″ IE6/IE7/IE8/IE9/IE10都生效</li>
<li>“\0″ IE8/IE9/IE10都生效，是IE8/9/10的hack</li>
<li>“\9\0″ 只对IE9/IE10生效，是IE9/10的hack</li>
</ul>
<ul>
<li>IE6能识别 *，但不能识别 !important</li>
<li>IE7能识别 *，也能识别!important</li>
<li>FF不能识别 *，但能识别!important,下划线_</li>
<li>IE6支持下划线</li>
<li>IE7和firefox均不支持下划线</li>
</ul>
<p><strong>（3）CSS hack方式三：选择器前缀法</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">*html     <span class="comment">//*前缀只对IE6生效</span></div><div class="line">    *+html    <span class="comment">//*+前缀只对IE7生效 </span></div><div class="line">    @media screen\<span class="number">9</span>&#123;...&#125;    <span class="comment">//只对IE6/7生效</span></div><div class="line">    @media \<span class="number">0</span>screen &#123;body &#123; <span class="attr">background</span>: red; &#125;&#125;    <span class="comment">//只对IE8有效</span></div><div class="line">    @media \<span class="number">0</span>screen\,screen\<span class="number">9</span>&#123;body &#123; <span class="attr">background</span>: blue; &#125;&#125;    <span class="comment">//只对IE6/7/8有效</span></div><div class="line">    @media screen\<span class="number">0</span> &#123;body &#123; <span class="attr">background</span>: green; &#125;&#125;    <span class="comment">//只对IE8/9/10有效</span></div><div class="line">    @media screen and (min-width:<span class="number">0</span>\<span class="number">0</span>) &#123;body &#123; <span class="attr">background</span>: gray; &#125;&#125;     <span class="comment">//只对IE9/10有效</span></div><div class="line">    @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) &#123;body &#123; <span class="attr">background</span>: orange; &#125;&#125;     <span class="comment">//只对IE10有效等等</span></div></pre></td></tr></table></figure>
<p><strong>以: “ #demo {width:100px;} “为例;</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#demo &#123;width:100px;&#125; /*被FIREFOX,IE6,IE7执行.*/</div><div class="line">    *html #demo &#123;width:120px;&#125; /*会被IE6执行,之前的定义会被后来的覆盖,所以#demo的宽度在IE6就为120px; */</div><div class="line">    *+html #demo &#123;width:130px;&#125; /*会被IE7执行*/</div><div class="line">    所以最后,#demo的宽度在三个浏览器的解释为: FIREFOX:100px; ie6:120px; ie7:130px;</div></pre></td></tr></table></figure>
<p><strong>IE8 最新css hack：</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="string">"\9"</span>　例:<span class="string">"border:1px\9;"</span>    <span class="comment">//这里的"\9"可以区别所有IE和FireFox.（只针对IE9 Hack）</span></div><div class="line">        <span class="string">"\0"</span>　<span class="comment">//IE8识别，--&gt;IE6、IE7不能.</span></div><div class="line">        <span class="string">"*"</span>　<span class="comment">//IE6、IE7可以识别.--&gt;IE8、FireFox不能.</span></div><div class="line">        <span class="string">"_"</span>　<span class="comment">//IE6可以识别"_",--&gt;IE7、IE8、FireFox不能.</span></div></pre></td></tr></table></figure>
<blockquote>
<p>Placeholder源自网上资料，点击标题即进入原网址，本人新手，没怎么用过hack，从百度百科整理一部分，作为以后查询方便，如果有什么问题，希望大神多多指点。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;白日做的梦要靠自己追&lt;/blockquote&gt;



&lt;h1 id=&quot;IE8以下图片出现蓝色边框&quot;&gt;&lt;a href=&quot;#IE8以下图片出现蓝色边框&quot; class=&quot;headerlink&quot; title=&quot;I
    
    </summary>
    
      <category term="前端" scheme="http:%5C%5Chexin.life/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="CSS学习笔记" scheme="http:%5C%5Chexin.life/tags/CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>HEXO+GitHub搭建个人博客</title>
    <link href="http:%5C%5Chexin.life/2017/03/28/title-1/"/>
    <id>http:\\hexin.life/2017/03/28/title-1/</id>
    <published>2017-03-28T15:15:03.000Z</published>
    <updated>2017-04-09T16:36:50.966Z</updated>
    
    <content type="html"><![CDATA[ <blockquote class="blockquote-center">白日做的梦要靠自己追</blockquote>




<p>   一直想有一个属于自己的博客，前段时间看到HEXO+GitHub傻瓜式搭建，就利用周末花了俩天时间搭建了一个自己的博客。花俩天时间是因为走了太多弯路~搞了太多错误，在这里把流程梳理一下，希望大家不要像我一样走弯路，顺便填入第一篇博客0.0，没有基础的同学也可以利用它搭建自己的博客，我觉得博客不一定要写技术，用来当做自己的私人空间也是很不错的。这里特别感谢<a href="http://chasen-g.cn/" target="_blank" rel="external">Chasen’s </a>，帮我解决了好多问题。 </p>
<hr>
<h2 id="关于HEXO"><a href="#关于HEXO" class="headerlink" title="关于HEXO"></a>关于HEXO</h2><hr>
<blockquote>
<p>hexo是一款基于<a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a>的静态博客框架，可以生成静态文件并且一键部署到github<br>pages上，并且他可以使用markdown(一款编辑器)来编写文章，十分简单。</p>
</blockquote>
<h2 id="搭建前环境准备"><a href="#搭建前环境准备" class="headerlink" title="搭建前环境准备"></a>搭建前环境准备</h2><hr>
<blockquote>
<p>安装<a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a>(正是因为了解到了node.js才下定决心学前端的)<br>进入官网，他会自动提取你的电脑型号，有俩个版本下载，左边的是稳定版，右边的是一直更新的前沿版，我们这里随便选择一个就好了，我个人喜欢新鲜事物，就选择了右边的</p>
<p><img src="http://i1.piimg.com/567571/f11f62b5f567f034.png" alt="这里写图片描述"></p>
<p>直接下载即可，只有13MB大小，然后一路默认安装就好了<br>安装好以后按 win+r 打开运行输入CMD（开始栏输入CMD也一样）<br>输入 node -v<br>输出版本号即安装成功，我这里是以前装好的v7.6.0版本<br><img src="http://i2.muimg.com/567571/9d667d081fc1c3b3.png" alt="这里写图片描述"></p>
</blockquote>
<h2 id="接下来安装git"><a href="#接下来安装git" class="headerlink" title="接下来安装git"></a>接下来安装git</h2><hr>
<blockquote>
<p>同上进入git  然后点击下载安装即可（30MB左右）  安装好以后右键会有</p>
<p>git gul here<br>git bush here</p>
<p> <img src="http://i4.buimg.com/567571/241888e67827ea3e.png" alt="这里写图片描述"><br>不懂git命令也没关系，其实我也不是很懂，跟着命令走就可以了  但是对于程序员来说还是必须要了解的   推荐几个网址吧：</p>
<ul>
<li><a href="https://git-scm.com/docs" target="_blank" rel="external">Git-Reference</a>(官网首选,当然是英文的)</li>
<li><a href="http://www.bootcss.com/p/git-guide/" target="_blank" rel="external">git-简易指南</a>（中文简易指南，基本命令够用了）</li>
<li><a href="http://opiece.me/2015/04/06/git-basic-commands/" target="_blank" rel="external">git-常用的基础命令</a></li>
</ul>
</blockquote>
<h2 id="然后是编辑器sublime（可选）"><a href="#然后是编辑器sublime（可选）" class="headerlink" title="然后是编辑器sublime（可选）"></a>然后是编辑器<a href="http://www.sublimetext.com/" target="_blank" rel="external">sublime</a>（可选）</h2><hr>
<blockquote>
<p>我这里用的是<a href="http://www.sublimetext.com/" target="_blank" rel="external">sublime text3</a>，很有程序员风格的编辑器，很多插件与快捷键，特别好用，推荐一下。（中文支持不太好，用习惯就好了）。<br>不用sublime也可以，如果熟悉vim的话可以直接用git打开vim编辑<br>我对vim也不是很熟，以前上Linux课的时候用过一点，也没好好听，基本忘光了，但是就是基本的修改个属性，能达到自己需求就行，对吧。</p>
</blockquote>
<h2 id="注册github"><a href="#注册github" class="headerlink" title="注册github"></a>注册<a href="https://github.com/" target="_blank" rel="external">github</a></h2><hr>
<blockquote>
<p> 对于没有<a href="https://github.com/" target="_blank" rel="external">GitHub</a>的同学，在这里申请一个<a href="https://github.com/" target="_blank" rel="external">GitHub</a>账号吧，这个很简单，直接注册，邮箱验证就好了。<br>申请好以后新建一个自己的仓库</p>
<p> <img src="http://i2.muimg.com/567571/2841bb7050ab8a1a.png" alt="这里写图片描述"></p>
<p>这里注意上面俩个箭头，<strong><em>命名必须要一致，后面的名字要以github.io结尾</em></strong></p>
<p><img src="http://i2.muimg.com/567571/ff8cffca9cb304a6.png" alt="引用块内容"></p>
<p>我当初就因为这里搞错了（我写成了xinhe.github.io），导致一直到下面的步骤得重新来，当初不知怎么想的，实在是chiou~所以需要购买一个域名~后面再说，先把hexo与github联系起来再说</p>
<p><img src="http://i4.buimg.com/567571/26dca9ec927dae3e.png" alt="引用块内容"></p>
</blockquote>
<h2 id="这里先把git与你的github联系起来"><a href="#这里先把git与你的github联系起来" class="headerlink" title="这里先把git与你的github联系起来"></a>这里先把git与你的github联系起来</h2><hr>
<blockquote>
<p>右键git bush here 输入命令绑定你的邮箱和名字，这里是我的~替换成自己的即可<br><img src="http://i2.muimg.com/567571/42e1a5a0bfa86767.png" alt="这里写图片描述"></p>
</blockquote>
<h2 id="接下来生成秘钥"><a href="#接下来生成秘钥" class="headerlink" title="接下来生成秘钥"></a>接下来生成秘钥</h2><hr>
<blockquote>
<p>ssh-keygen -t rsa -C “XXX@XXX.com”</p>
<p>这里C是大写哦！！！</p>
<p><img src="http://ww3.sinaimg.cn/large/0060lm7Tgy1fe2sakgczdj30f103t74e.jpg" alt="这里写图片描述"></p>
<p>如图然后连续按回车即可<br>然后在#user_id/.ssh目录下会生成两个文件，id_rsa.pub和id_rsa. </p>
<p><img src="http://ww3.sinaimg.cn/large/0060lm7Tgy1fe2rtqy319j30jj05paar.jpg" alt="我这里是默认安装的，直接在C盘用户，管理员，.SSH文件下"></p>
<p>利用编辑器打开rsa文件，将里面的内容copy，复制在github，在SSH设置页面添加刚才的SSH文件也就是id_rsa.pub的内容即可。</p>
<p><img src="http://ww2.sinaimg.cn/large/0060lm7Tgy1fe2rtqy15pj30tx0cjjsr.jpg" alt="在github中选择setting--&gt;ssh and GPG 添加SSH"> </p>
<p>这里会验证一下github的密码</p>
</blockquote>
<p>最后来验证一下：</p>
<blockquote>
<p>git命令输入 ssh -T git@github.com<br>如果成功他让你输入yes然后会返回一个成功的信息<br><img src="http://ww4.sinaimg.cn/large/0060lm7Tgy1fe2sgxkqvvj30fn051mxg.jpg" alt="这里写图片描述"></p>
</blockquote>
<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><hr>
<p>是不是觉得需要下载的东西好多啊，我开始也是这样觉得，但是为了个人博客，忍了吧，其实这里为了详细，写的比较多，比较熟悉的人可以快速浏览，直接上手，遇到问题再回过头来检查步骤，别急，马上就可以看到属于你的博客了~<em>*</em></p>
<blockquote>
<p>npm install hexo-cli -g<br>npm install hexo-deployer-git –save </p>
</blockquote>
<p>  缺少这个命令之后提交会有问题当时这里也翻了错误<br> 然后可以利用Git  一路cd 到hexo的安装目录，或者进去目录，右键git bush here  即可（命令必须在init目录下执行，否则不成功，但是也不报错） </p>
<blockquote>
<p>hexo init       # 初始化<br>hexo clean    #清理临时文件<br>hexo g         # 完整命令为hexo generate，生成静态文件<br>hexo s      #完整命令为hexo server，打开本地服务</p>
</blockquote>
<p>打开本地服务，这时候打开浏览器输入</p>
<blockquote>
<p><a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a><br>看看你博客页面吧~官方默认会有一篇hello world，当然 ，现在还只是本地的。只有你自己能看到</p>
</blockquote>
<h2 id="将静态页面提交到github"><a href="#将静态页面提交到github" class="headerlink" title="将静态页面提交到github"></a>将静态页面提交到github</h2><hr>
<blockquote>
<p>此时就用到了编辑器，打开_config.yml文件，直接拖入编辑器即可自行修改</p>
<p>没有编辑器的同学， 可以cd(进入的意思)到hexo的文件夹下，输入vim _config.yml<br>然后直接滑到下图的位置，按键盘“a”，意思是插入文本，然后就可以修改了，修改完之后按ESC，然后按“Shif+：”，输入“wq”，意思是保存加退出，如果直接退出就输入“q”即可。</p>
<p><img src="http://ww3.sinaimg.cn/large/0060lm7Tgy1fe2rpumoeuj30iv0d5tal.jpg" alt="这里写图片描述"><br><img src="http://ww1.sinaimg.cn/large/0060lm7Tgy1fe2rpulywmj30io09pwfe.jpg" alt="这里写图片描述">  </p>
<p>然后修改如下：<br>将repo后面的内容改成自己的</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">      type: git</div><div class="line">      repo: git@github.com:yourself/yourself.github.io.git</div><div class="line">      branch: master</div></pre></td></tr></table></figure>
<blockquote>
<p>hexo d -g #组合命令，命令等同于hexo g  再 hexo d</p>
</blockquote>
<p>这时候输入你的github地址，例如我的是18292843691.github.io</p>
<p>就可以看到你的博客页面了…</p>
<h2 id="关于主题安装"><a href="#关于主题安装" class="headerlink" title="关于主题安装"></a>关于主题安装</h2><p>主题有好多种，这里我推荐<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">NEXT</a>,简洁，大方，支持多语言，一句代码即可下载NEXT最新版，如果需要其他的可以上官网查找喜欢的，添加方式是一样的。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https:<span class="comment">//github.com/iissnan/hexo-theme-next themes/next</span></div></pre></td></tr></table></figure></p>
<blockquote>
<p>然后打开 _config.yml文件，如图找到theme修改为next即可</p>
<p><img src="http://i2.muimg.com/567571/767faa63e5360b89.png" alt="这里写图片描述"> </p>
<p> 我这里没有用next，因为用next的人太多了，点击进入<a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="external">yilia</a>。</p>
<h2 id="关于文章发布"><a href="#关于文章发布" class="headerlink" title="关于文章发布"></a>关于文章发布</h2></blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">输入hexo <span class="keyword">new</span> <span class="string">"title"</span></div><div class="line">即可自动生成md文件在source/_post下</div></pre></td></tr></table></figure>
<p><img src="http://i2.muimg.com/567571/deb80ae44a521f7e.png" alt="这里写图片描述"> </p>
<blockquote>
<p>然后打开你的md文件编写文章就可以了，文章需要是markdown格式，可以用markdown格式的编辑器编写，也可以找在线的markdown编辑器，例如我直接用CSDN的，也可以离线使用，支持导出为MD，HTML格式，很方便。<br>关于图片，我推荐<a href="http://jiantuku.com/" target="_blank" rel="external">极简图床</a>，简单方便。</p>
</blockquote>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo d -g   #同步至github</div></pre></td></tr></table></figure>
<p><strong><em>hexo 常用命令(#后为注释)</em></strong></p>
<blockquote>
<p>hexo init       #初始化<br>hexo clean    #清理临时文件<br>hexo g         # 完整命令为hexo generate，生成静态文件<br>hexo s      #完整命令为hexo server，打开本地服务<br>hexo d #完整命令为hexo deploy，用于将本地文件发布到github上<br>hexo new “postName” #新建文章<br>hexo new page “pageName” #新建页面<br>hexo help    #帮助</p>
</blockquote>
<hr>
<p>如果文章有什么错误，感谢大神指出，好及时修改。希望同大家共同交流，进步。</p>
<p>另外推荐几篇大神写的（我也是按照他们的教程搭建，不分先后）：</p>
<ul>
<li><a href="https://hexo.io/docs/" target="_blank" rel="external">HEXO官方文档</a></li>
<li><a href="http://wiki.jikexueyuan.com/project/hexo-document/" target="_blank" rel="external">极客学院提供的中文文档</a> </li>
<li><a href="http://chasen-g.cn/" target="_blank" rel="external">帮了我很大忙的-&gt;Chasen’s</a></li>
<li><a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="external">hexo你的博客|不如</a> </li>
<li><a href="https://linghucong.js.org/2016/04/15/2016-04-15-hexo-github-pages-blog/" target="_blank" rel="external">手把手教你使用hexo+github搭建个人博客</a> </li>
<li><a href="http://opiece.me/2015/04/09/hexo-guide/" target="_blank" rel="external">使用hexo搭建个人博客</a> </li>
<li><a href="http://myzchi.com/2015/05/02/hexo-github%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E6%80%BB%E7%BB%93/" target="_blank" rel="external">hexo+github搭建过程总结</a> </li>
<li><a href="http://www.zipperary.com/categories/hexo/" target="_blank" rel="external">hexo系列教程</a> </li>
<li><a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html" target="_blank" rel="external">搭建一个免费的，无限流量的blog（阮一峰）</a></li>
</ul>
<p>相信你所相信的，坚持你所坚持的</p>
]]></content>
    
    <summary type="html">
    
       &lt;blockquote class=&quot;blockquote-center&quot;&gt;白日做的梦要靠自己追&lt;/blockquote&gt;




&lt;p&gt;   一直想有一个属于自己的博客，前段时间看到HEXO+GitHub傻瓜式搭建，就利用周末花了俩天时间搭建了一个自己的博客。花俩天时间是因为
    
    </summary>
    
      <category term="hexo" scheme="http:%5C%5Chexin.life/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http:%5C%5Chexin.life/tags/hexo/"/>
    
  </entry>
  
</feed>
