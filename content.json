[{"title":"CSS学习笔记(Placeholder及CSS_hack)","date":"2017-03-31T15:09:45.000Z","path":"2017/03/31/title-2/","text":"IE8以下图片出现蓝色边框123img&#123; border:0; /*或者border:none;*/ &#125; #如何使文本以大写字母开头？ 1text-transform:capitalize; 强制设置为IE模式12&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /&gt; //我写的页面在IE8之下全部乱掉了，在网上搜到这个方法，用了发现好了，强制为IE渲染模式 IE8及以下不支持Placeholder（基于JQ）1234567891011121314151617181920212223242526272829303132333435363738394041424344&lt;!doctype html&gt; &lt;html&gt; &lt;header&gt; &lt;meta charset=\"utf-8\"&gt; &lt;title&gt;&lt;/title&gt; &lt;style type=\"text/css\"&gt; *&#123;margin:0;padding:0;&#125; form &#123;margin:50px;&#125; input &#123;display:block;margin:0 0 6px 0;&#125; &lt;/style&gt; &lt;/header&gt; &lt;body&gt; &lt;form&gt; 用户名：&lt;input name=\"name\" placeholder=\"请输入用户名\"/&gt; 密码：&lt;input name=\"password\" placeholder=\"请输入登陆密码\"/&gt; &lt;/form&gt; &lt;script type=\"text/javascript\" src=\"jquery-1.11.1.min.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\"&gt; $(function()&#123; function placeholderSupport() &#123; // 判断浏览器是否支持 placeholder return 'placeholder' in document.createElement('input'); &#125; if(!placeholderSupport())&#123; $(document).on('focus', '[placeholder]',function() &#123; var input = $(this); if (input.val() == input.attr('placeholder')) &#123; input.val(''); input.removeClass('placeholder'); &#125; &#125;); $(document).on('blur', '[placeholder]',function() &#123; var input = $(this); if (input.val() == '' || input.val() == input.attr('placeholder')) &#123; input.addClass('placeholder'); input.val(input.attr('placeholder')); &#125; &#125;); $('[placeholder]').blur(); &#125;; &#125;); &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; 常见CSS hack不管是什么方法，书写的顺序都是firefox的写在前面，IE7的写在中间，IE6的写在最后（1）方式一 条件注释法 只在IE下生效 123&lt;!--[if IE]&gt; 这段文字只在IE浏览器显示 &lt;![endif]--&gt; 只在IE6下生效 123&lt;!--[if IE 6]&gt; 这段文字只在IE6浏览器显示 &lt;![endif]--&gt; 只在IE6以上版本生效 gte IE 6]>12这段文字只在IE6以上(包括)版本IE浏览器显示&lt;![endif]--&gt; 只在IE8上不生效 ! IE 8]>12这段文字在非IE8浏览器显示&lt;![endif]--&gt; 非IE浏览器生效 !IE]>12这段文字只在非IE浏览器显示&lt;![endif]--&gt; （2）方式二 类内属性前缀法 在标准模式中： “-″减号是IE6专有的hack “\\9″ IE6/IE7/IE8/IE9/IE10都生效 “\\0″ IE8/IE9/IE10都生效，是IE8/9/10的hack “\\9\\0″ 只对IE9/IE10生效，是IE9/10的hack IE6能识别 *，但不能识别 !important IE7能识别 *，也能识别!important FF不能识别 *，但能识别!important,下划线_ IE6支持下划线 IE7和firefox均不支持下划线 （3）CSS hack方式三：选择器前缀法 12345678*html //*前缀只对IE6生效 *+html //*+前缀只对IE7生效 @media screen\\9&#123;...&#125; //只对IE6/7生效 @media \\0screen &#123;body &#123; background: red; &#125;&#125; //只对IE8有效 @media \\0screen\\,screen\\9&#123;body &#123; background: blue; &#125;&#125; //只对IE6/7/8有效 @media screen\\0 &#123;body &#123; background: green; &#125;&#125; //只对IE8/9/10有效 @media screen and (min-width:0\\0) &#123;body &#123; background: gray; &#125;&#125; //只对IE9/10有效 @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) &#123;body &#123; background: orange; &#125;&#125; //只对IE10有效等等 以: “ #demo {width:100px;} “为例; 1234#demo &#123;width:100px;&#125; /*被FIREFOX,IE6,IE7执行.*/ *html #demo &#123;width:120px;&#125; /*会被IE6执行,之前的定义会被后来的覆盖,所以#demo的宽度在IE6就为120px; */ *+html #demo &#123;width:130px;&#125; /*会被IE7执行*/ 所以最后,#demo的宽度在三个浏览器的解释为: FIREFOX:100px; ie6:120px; ie7:130px; IE8 最新css hack： 1234\"\\9\" 例:\"border:1px\\9;\" //这里的\"\\9\"可以区别所有IE和FireFox.（只针对IE9 Hack） \"\\0\" //IE8识别，--&gt;IE6、IE7不能. \"*\" //IE6、IE7可以识别.--&gt;IE8、FireFox不能. \"_\" //IE6可以识别\"_\",--&gt;IE7、IE8、FireFox不能. Placeholder源自网上资料，点击标题即进入原网址，本人新手，没怎么用过hack，从百度百科整理一部分，作为以后查询方便，如果有什么问题，希望大神多多指点。","excerpt":"","categories":[{"name":"CSS","slug":"CSS","permalink":"http:\\\\hexin.life/categories/CSS/"}],"tags":[{"name":"CSS学习笔记","slug":"CSS学习笔记","permalink":"http:\\\\hexin.life/tags/CSS学习笔记/"}]},{"title":"HEXO+GitHub搭建个人博客","date":"2017-03-28T15:15:03.000Z","path":"2017/03/28/title-1/","text":"一直想有一个属于自己的博客，前段时间看到HEXO+GitHub傻瓜式搭建，就利用周末花了俩天时间搭建了一个自己的博客。花俩天时间是因为走了太多弯路~搞了太多错误，在这里把流程梳理一下，希望大家不要像我一样走弯路，顺便填入第一篇博客0.0，没有基础的同学也可以利用它搭建自己的博客，我觉得博客不一定要写技术，用来当做自己的私人空间也是很不错的。这里特别感谢Chasen’s ，帮我解决了好多问题。 关于HEXO hexo是一款基于Node.js的静态博客框架，可以生成静态文件并且一键部署到githubpages上，并且他可以使用markdown(一款编辑器)来编写文章，十分简单。 搭建前环境准备 安装Node.js(正是因为了解到了node.js才下定决心学前端的)进入官网，他会自动提取你的电脑型号，有俩个版本下载，左边的是稳定版，右边的是一直更新的前沿版，我们这里随便选择一个就好了，我个人喜欢新鲜事物，就选择了右边的 直接下载即可，只有13MB大小，然后一路默认安装就好了安装好以后按 win+r 打开运行输入CMD（开始栏输入CMD也一样）输入 node -v输出版本号即安装成功，我这里是以前装好的v7.6.0版本 接下来安装git 同上进入git 然后点击下载安装即可（30MB左右） 安装好以后右键会有 git gul heregit bush here 不懂git命令也没关系，其实我也不是很懂，跟着命令走就可以了 但是对于程序员来说还是必须要了解的 推荐几个网址吧： Git-Reference(官网首选,当然是英文的) git-简易指南（中文简易指南，基本命令够用了） git-常用的基础命令 然后是编辑器sublime（可选） 我这里用的是sublime text3，很有程序员风格的编辑器，很多插件与快捷键，特别好用，推荐一下。（中文支持不太好，用习惯就好了）。不用sublime也可以，如果熟悉vim的话可以直接用git打开vim编辑我对vim也不是很熟，以前上Linux课的时候用过一点，也没好好听，基本忘光了，但是就是基本的修改个属性，能达到自己需求就行，对吧。 注册github 对于没有GitHub的同学，在这里申请一个GitHub账号吧，这个很简单，直接注册，邮箱验证就好了。申请好以后新建一个自己的仓库 这里注意上面俩个箭头，命名必须要一致，后面的名字要以github.io结尾 我当初就因为这里搞错了（我写成了xinhe.github.io），导致一直到下面的步骤得重新来，当初不知怎么想的，实在是chiou~所以需要购买一个域名~后面再说，先把hexo与github联系起来再说 这里先把git与你的github联系起来 右键git bush here 输入命令绑定你的邮箱和名字，这里是我的~替换成自己的即可 接下来生成秘钥 ssh-keygen -t rsa -C “XXX@XXX.com” 这里C是大写哦！！！ 如图然后连续按回车即可然后在#user_id/.ssh目录下会生成两个文件，id_rsa.pub和id_rsa. 利用编辑器打开rsa文件，将里面的内容copy，复制在github，在SSH设置页面添加刚才的SSH文件也就是id_rsa.pub的内容即可。 这里会验证一下github的密码 最后来验证一下： git命令输入 ssh -T git@github.com如果成功他让你输入yes然后会返回一个成功的信息 安装hexo 是不是觉得需要下载的东西好多啊，我开始也是这样觉得，但是为了个人博客，忍了吧，其实这里为了详细，写的比较多，比较熟悉的人可以快速浏览，直接上手，遇到问题再回过头来检查步骤，别急，马上就可以看到属于你的博客了~* npm install hexo-cli -gnpm install hexo-deployer-git –save 缺少这个命令之后提交会有问题当时这里也翻了错误 然后可以利用Git 一路cd 到hexo的安装目录，或者进去目录，右键git bush here 即可（命令必须在init目录下执行，否则不成功，但是也不报错） hexo init # 初始化hexo clean #清理临时文件hexo g # 完整命令为hexo generate，生成静态文件hexo s #完整命令为hexo server，打开本地服务 打开本地服务，这时候打开浏览器输入 http://localhost:4000看看你博客页面吧~官方默认会有一篇hello world，当然 ，现在还只是本地的。只有你自己能看到 将静态页面提交到github 此时就用到了编辑器，打开_config.yml文件，直接拖入编辑器即可自行修改 没有编辑器的同学， 可以cd(进入的意思)到hexo的文件夹下，输入vim _config.yml然后直接滑到下图的位置，按键盘“a”，意思是插入文本，然后就可以修改了，修改完之后按ESC，然后按“Shif+：”，输入“wq”，意思是保存加退出，如果直接退出就输入“q”即可。 然后修改如下：将repo后面的内容改成自己的 1234deploy: type: git repo: git@github.com:yourself/yourself.github.io.git branch: master hexo d -g #组合命令，命令等同于hexo g 再 hexo d 这时候输入你的github地址，例如我的是18292843691.github.io 就可以看到你的博客页面了… 关于主题安装主题有好多种，这里我推荐NEXT,简洁，大方，支持多语言，一句代码即可下载NEXT最新版，如果需要其他的可以上官网查找喜欢的，添加方式是一样的。1git clone https://github.com/iissnan/hexo-theme-next themes/next 然后打开 _config.yml文件，如图找到theme修改为next即可 我这里没有用next，因为用next的人太多了，点击进入yilia。 关于文章发布 12输入hexo new \"title\"即可自动生成md文件在source/_post下 然后打开你的md文件编写文章就可以了，文章需要是markdown格式，可以用markdown格式的编辑器编写，也可以找在线的markdown编辑器，例如我直接用CSDN的，也可以离线使用，支持导出为MD，HTML格式，很方便。关于图片，我推荐极简图床，简单方便。 1hexo d -g #同步至github hexo 常用命令(#后为注释) hexo init #初始化hexo clean #清理临时文件hexo g # 完整命令为hexo generate，生成静态文件hexo s #完整命令为hexo server，打开本地服务hexo d #完整命令为hexo deploy，用于将本地文件发布到github上hexo new “postName” #新建文章hexo new page “pageName” #新建页面hexo help #帮助 如果文章有什么错误，感谢大神指出，好及时修改。希望同大家共同交流，进步。 另外推荐几篇大神写的（我也是按照他们的教程搭建，不分先后）： HEXO官方文档 极客学院提供的中文文档 帮了我很大忙的-&gt;Chasen’s hexo你的博客|不如 手把手教你使用hexo+github搭建个人博客 使用hexo搭建个人博客 hexo+github搭建过程总结 hexo系列教程 搭建一个免费的，无限流量的blog（阮一峰）","excerpt":"","categories":[{"name":"hexo","slug":"hexo","permalink":"http:\\\\hexin.life/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http:\\\\hexin.life/tags/hexo/"}]}]